pipeline {
    agent{
        docker {
            image 'alpine/terragrunt:latest'
            reuseNode true
        }
    }

    // parameters {
    //     booleanParam(name: 'Apply', defaultValue: false, description: 'Automatically run apply after manual approval?')
    //     booleanParam(name: 'Destroy', defaultValue: false, description: 'Destroy Terraform build?')
    // }

    stages {
        stage('Checkout') {
            steps {
            checkout([$class: 'GitSCM', branches: [[name: '*/master']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/dallisonlima/jenkins-terragrunt']]])            

          }
        }

        stage('Plan') {
            steps {
                dir('dev'){
                    sh 'ls -la'
                    sh 'terragrunt run-all init'
                    sh 'terragrunt run-all plan -input=false -out=tfplan'
                } 
            }
        }

        // stage('Approval') {
        //     steps {
        //         script {
        //             def test = params.Destroy
        //             if (test == true) {
        //                 script {
        //                     def userInput = input(id: 'Confirm', message: 'Deseja fazer o destroy do terraform?', parameters: [ [$class: 'BooleanParameterDefinition', defaultValue: false, description: 'Destroy terraform', name: 'Confirm'] ])
        //                 }
        //             } else {
        //                 script {
        //                     def plan = readFile 'tfplan.txt'
        //                     input message: "Do you want to Apply",
        //                     parameters: [string(name: 'Plan', description: 'Please review the plan', defaultValue: plan)]
        //                 }
        //             }
        //         }
        //     }
        // }

        // stage('Apply') {
        //     when {
        //         not {
        //             equals expected: true, actual: params.Destroy
        //         }
        //     }
            
        //     steps {
        //         sh "terraform apply -input=false tfplan"
        //     }
        // }
        
        // stage('Destroy') {
        //     when {
        //         equals expected: true, actual: params.Destroy
        //     }
        
        //     steps {
        //     sh "terraform destroy --auto-approve"
        //     }
        // }
    } 
}
